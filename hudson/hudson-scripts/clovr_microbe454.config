## Configuration file for
#########################################################
## Input information.
## Configuration options for the pipeline.
#########################################################
[input]

## The input tag name for sff input data
## Should already be tagged data
## See tagData.py --help for more info
INPUT_SFF_TAG=hudson_sff_test

## These are the output tags which will be downloaded
## at the end of the pipeline to the local VM.
## Possible options:
TAGS_TO_DOWNLOAD=assembly_scf,assembly_qc,polypeptide_fasta,cds_fasta,annotation_genbank,annotation_sqn

## pipeline name
## if pipeline is already present, will simply monitor it
## otherwise will create the pipeline with current settings
PIPELINE_NAME=illumina_${DATE}

## organism info
OUTPUT_PREFIX=BD413_mini
ORGANISM=Acinetobacter baylii

## sff_to_CA options
##
## trim can be one of the following values:
## none, soft, hard, chop
TRIM=chop
##
## clear can be one of the following values:
## all, 454, none, n, pair-of-n, discard-n
CLEAR=454
LINKER=titanium
INSERT_SIZE=8000 1000

## celera assembler options
SPEC_FILE=/dev/null
SKIP_BANK=1

## For the annotation portion of the pipeline.
REFERENCE_DB_TAG=clovr-prok-db

## How many groups for ergatis
GROUP_COUNT=20


##########################################################
## Cluster info.
## If the cluster_tag is present, the script will first
## check for the presence of this cluster and if it's not
## running will start a cluster with the default settings
##########################################################
[cluster]
CLUSTER_NAME=local
EXEC_NODES=10
CLOVR_CONF=clovr.conf
CLUSTER_CREDENTIAL=local

#key=/mnt/devel1.pem
#host=localhost

#########################################################
## Output info.
## Specifies where locally the data will end up and also
## logging information
#########################################################
[output]
OUTPUT_DIRECTORY=/mnt/output
log_file=/mnt/prok_run.conf.log
## the higher, the more output (3 = most verbose)
debug_level=3


[pipeline]
PIPELINE_TEMPLATE=clovr_microbe454
PIPELINE_ARGS=--INPUT_FILE_LIST=${input.INPUT_SFF_TAG} --OUTPUT_PREFIX=${input.OUTPUT_PREFIX} --ORGANISM="${input.ORGANISM}" --DATABASE_PATH=${input.REFERENCE_DB_TAG} --conf=${cluster.CLOVR_CONF} --GROUP_COUNT=${input.GROUP_COUNT} --TRIM=${input.TRIM} --LINKER=${input.LINKER} --CLEAR=${input.CLEAR} --SPEC_FILE=${input.SPEC_FILE} --SKIP_BANK=${input.SKIP_BANK} --INSERT_SIZE="${input.INSERT_SIZE}"

#prestart,prerun,postrun are all run locally. Use noop.xml for no operation
#Prestart is run before cluster start
#Possible actions: tag input data and do QC metrics
PRESTART_TEMPLATE_XML=/opt/ergatis/docs/noop.xml
#Prerun is run after cluster start but before pipeline start
#Possible actions: tag and upload data sets to the cluster
PRERUN_TEMPLATE_XML=/opt/clovr_pipelines/workflow/project_saved_templates/clovr_microbe454/clovr_microbe454.prerun.xml
#Postrun is run after pipeline completion and after downlaod data
#Possible actions: local a local database, web browser.reorganize data for local ergatis
POSTRUN_TEMPLATE_XML=/opt/ergatis/docs/noop.xml


