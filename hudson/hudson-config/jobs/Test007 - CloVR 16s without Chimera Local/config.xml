<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Launching of a CloVR 16s pipeine without chimera checking using local credentials.  This test uses a single fasta file.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>HIDDEN</name>
          <description>Parameter to differentiate between builds</description>
          <defaultValue>1</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
set -e
source /opt/vappio-scripts/clovrEnv.sh

DATE=`date +&quot;%m-%d-%Y-%T&quot; | sed -e &apos;s/:/_/g&apos;`
DATA_DIR=`mktemp -p /mnt/user_data -d`

echo &quot;Downloading dataset...&quot;
wget --quiet -O ${DATA_DIR}/InfantGut16S.tar.gz http://cb2.igs.umaryland.edu/clovr/Public_Benchmarks/CloVR-16S/InfantGutMicrobiome/InfantGut16S.tar.gz

echo &quot;Extracting dataset...&quot;
tar xfv ${DATA_DIR}/InfantGut16S.tar.gz -C ${DATA_DIR}
chmod -R 777 ${DATA_DIR}

vp-add-dataset -o --tag-name=clovr_16S_no_chimera_input_local_${DATE} ${DATA_DIR}/InfantGut16S.fasta
vp-add-dataset -o --tag-name=clovr_16S_no_chimera_mapping ${DATA_DIR}/InfantGut16S.map

vp-describe-protocols --config-from-protocol=clovr_16S_nochimeracheck \
    -c input.FASTA_TAG=clovr_16S_no_chimera_input_local_${DATE} \
    -c input.MAPPING_TAG=clovr_16S_no_chimera_mapping \
    -c cluster.CLUSTER_NAME=&apos;local&apos; \
    -c cluster.CLUSTER_CREDENTIAL=&apos;local&apos; \
    -c cluster.TERMINATE_ONFINISH=false \
    -c pipeline.PIPELINE_DESC=&quot;Hudson CloVR 16S No Chimera Test local ${DATE}&quot; \
    &gt; /tmp/$$.pipeline.conf.${DATE}

TASK_NAME=`vp-run-pipeline --print-task-name --pipeline-config /tmp/$$.pipeline.conf.${DATE} --overwrite`

if [ &quot;$?&quot; == &quot;1&quot; ]; then
    echo &quot;vp-run-pipeline failed to run&quot;
    rm -rf ${DATA_DIR}
    exit 1
fi

vp-describe-task --name local --exit-code --block $TASK_NAME
rm -rf ${DATA_DIR}

exit $?

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>