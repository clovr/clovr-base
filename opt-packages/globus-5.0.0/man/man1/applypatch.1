.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "APPLYPATCH 1"
.TH APPLYPATCH 1 "2004-05-20" "perl v5.8.0" "User Contributed Perl Documentation"
.SH "NAME"
applypatch \- apply 'makepatch' generated script to update a source tree
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBapplypatch\fR [ \fIoptions\fR ] \fIpatch-kit\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBApplypatch\fR applies a patch kit as generated by the \fBmakepatch\fR
program. It performs the following actions:
.IP "\(bu" 4
First, it will extensively verify that the patch kit is complete and
did not get corrupted during transfer.
.IP "\(bu" 4
Then it will apply some heuristics to verify that the directory in
which the patch will be applied does indeed contain the expected
sources.
.Sp
If a corruption or verification error is detected, \fBapplypatch\fR exits
without making changes.
.IP "\(bu" 4
If the kit is okay, and the directory seems to be the right one: it
creates new files and directories as necessary.
.IP "\(bu" 4
Then it runs the \fBpatch\fR program to apply the patch to the source files.
.IP "\(bu" 4
Upon completion, obsolete files, directories and .orig files are
removed, file modes of new files are set, and the timestamps of
all patched files are adjusted.
.SH "Applypatch arguments"
.IX Header "Applypatch arguments"
\&\fBApplypatch\fR takes one argument, the name of the patch kit as
generated by \fBmakepatch\fR. If no name is specified, the patch kit is
read from standard input.
.SH "Applypatch options"
.IX Header "Applypatch options"
Options are matched case insensitive, and may be abbreviated to uniqueness.
.IP "\fB\-directory\fR \fIdir\fR" 4
.IX Item "-directory dir"
The name of the source directory to be patched.
.IP "\fB\-check\fR" 4
.IX Item "-check"
Perform the checks on the patch kit and patch directory, but do not
make any changes.
.IP "\fB\-force\fR" 4
.IX Item "-force"
Force continuation of the patch process even when corruption or
verification errors are detected. This is very dangerous!
.IP "\fB\-retain\fR" 4
.IX Item "-retain"
Do not remove patch backup files (with extension \f(CW\*(C`.orig\*(C'\fR) upon
completion. 
.IP "\fB\-patch\fR \fIcmd\fR" 4
.IX Item "-patch cmd"
The patch command to be used. Default is "\f(CW\*(C`patch \-p0 \-N\*(C'\fR\*(L".
Additionally, a \*(R"\f(CW\*(C`\-s\*(C'\fR" will be added unless option \fB\-verbose\fR was
specified.
.IP "\fB\-verbose\fR" 4
.IX Item "-verbose"
This option will cause \fBapplypatch\fR and the \fBpatch\fR program to emit
verbose progress information.
.IP "\fB\-quiet\fR" 4
.IX Item "-quiet"
This option will cause \fBapplypatch\fR and the \fBpatch\fR program to emit
no progress information, only error messages.
.SH "Environment variables"
.IX Header "Environment variables"
.IP "\s-1TMPDIR\s0" 4
.IX Item "TMPDIR"
\&\f(CW\*(C`TMPDIR\*(C'\fR can be used to designate the area where temporary files are
placed. It defaults to \f(CW\*(C`/usr/tmp\*(C'\fR.
.IP "\s-1SIMPLE_BACKUP_SUFFIX\s0" 4
.IX Item "SIMPLE_BACKUP_SUFFIX"
The suffix used by (some versions of?) \fBpatch\fR to back up the
originals of patched files. Upon completion, these files are removed
by \fBapplypatch\fR unless the option \fB\-retain\fR was specified.
Default value if "\f(CW\*(C`.orig\*(C'\fR".
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBmakepatch\fR(1),
\&\fBdiff\fR(1),
\&\fBpatch\fR(1),
\&\fBperl\fR(1),
\&\fBrm\fR(1).
.SH "AUTHOR AND CREDITS"
.IX Header "AUTHOR AND CREDITS"
This program is written by Johan Vromans <jvromans@squirrel.nl>.
.PP
See section \s-1AUTHOR\s0 \s-1AND\s0 \s-1CREDITS\s0 of the makepatch program for an
extensive list of people that helped one way or another in the
makepatch / applypatch project.
.SH "COPYRIGHT AND DISCLAIMER"
.IX Header "COPYRIGHT AND DISCLAIMER"
This program is Copyright 1992,1998 by Squirrel Consultancy. All
rights reserved.
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of either: a) the \s-1GNU\s0 General Public License as
published by the Free Software Foundation; either version 1, or (at
your option) any later version, or b) the \*(L"Artistic License\*(R" which
comes with Perl.
.PP
This program is distributed in the hope that it will be useful, but
\&\s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0. See either the
\&\s-1GNU\s0 General Public License or the Artistic License for more details.
