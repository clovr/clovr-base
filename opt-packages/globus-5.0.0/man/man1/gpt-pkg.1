.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.09)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GPT-PKG 1"
.TH GPT-PKG 1 "2006-01-11" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
\&\fBgpt-pkg\fR \- Creates flavored binary packages out of an installation
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBgpt-pkg\fR [options] packages
.PP
.Vb 1
\&  Options:
\&
\&     \-verbose                          Print copious output
\&     \-help                             Print usage
\&     \-man                              Print man page.
\&     \-version                          Print GPT version.
\&     \-native                           Create native pkgs as well as GPT pkgs (RPMs only).
\&     \-all                              Archive everything in the package directory..
\&     \-installdir=PATH                  Override $GLOBUS_LOCATION
\&     \-pkgdir=PATH                      Directory to put the packages
\&     \-rpmprefix=PATH                   Absolute path encoded in the RPM.
\&     \-buildnumber=NUMBER               Build number used for pgm_static packages
\&     \-rpmlicense=LABEL                 License Label added to the RPM header
\&     [packages]                        List of packages to be archived
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBgpt-pkg\fR Creates binary packages from an installation.  The
installation needs to contain \s-1GPT\s0 packaging data files. An
installation is created by running \fIgpt-build\fR on a collection of
source packages or bundles.
.SH "FILES IN PGM PACKAGES"
.IX Header "FILES IN PGM PACKAGES"
Installed files such as executables that are found in pgm and
ptm_static packages will overwrite one another when multiple flavors
of the same package are built by gpt-build. To preserve multiple
flavors of these files, gpt-build copies them into flavored
subdirectories.  For example, the program \f(CW$GLOBUS_LOCATION\fR/bin/foo
will be copied into the location \f(CW$GLOBUS_LOCATION\fR/bin/gcc32/shared if
it was built with dynamically with the gcc32 flavor.  \fBgpt-pkg\fR
retrieves these files and copies them back to their proper location
before packaging them.  Thus gpt-pkg will also overwrite these files
as it archives the different flavors of a pgm package.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-installdir\fR" 8
.IX Item "-installdir"
Specify the directory in which the installed files currently live.  If
this argument is not supplied, the value of the environment variable
\&\s-1GLOBUS_LOCATION\s0 is used instead.
.IP "\fB\-all\fR" 8
.IX Item "-all"
Packages all of the binaries in an installation.
.IP "\fB\-native\fR" 8
.IX Item "-native"
Creates a package in the native packaging format.  Currently only rpm
is supported.
.IP "\fB\-rpmprefix=<path_to_installation\fR>" 8
.IX Item "-rpmprefix=<path_to_installation>"
This should be set to the path to your \s-1GLOBUS_LOCATION\s0.  \s-1GPT\s0 will use a
value of \*(L"/usr/grid\*(R" if this option is not specified.
.IP "\fB\-rpmlicense=<label\fR>" 8
.IX Item "-rpmlicense=<label>"
Provides an alternate copyright label for the rpms. The default is
whatever \s-1GPT\s0 was configured with.
.IP "\fB\-verbose\fR" 8
.IX Item "-verbose"
Prints out all of the build messages.
.IP "\fB\-log=FILE\fR" 8
.IX Item "-log=FILE"
Appends all of the build messages to \s-1FILE\s0. This option also sets \-verbose.
.IP "\fB\-help\fR" 8
.IX Item "-help"
Print a brief help message and exits.
.IP "\fB\-man\fR" 8
.IX Item "-man"
Prints the manual page and exits.
.IP "\fB\-version\fR" 8
.IX Item "-version"
Prints the version of \s-1GPT\s0 and exits.
.SH "pgm and pgm_static packages"
.IX Header "pgm and pgm_static packages"
gpt-build copies the files for these packages in a flavored location
because different flavors of these types of packages will conflict
with each other.  \fBgpt-pkg\fR restores these files when it packages pgm
and pgm_static types.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIgpt\-bundle\fR\|(1) \fIgpt\-install\fR\|(1) \fIgpt\-build\fR\|(1)
.SH "AUTHOR"
.IX Header "AUTHOR"
Michael Bletzinger <mbletzin.ncsa.uiuc.edu> and Eric Blau
<blau.mcs.anl.gov>
