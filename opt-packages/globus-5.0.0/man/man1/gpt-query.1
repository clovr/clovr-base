.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.09)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GPT-QUERY 1"
.TH GPT-QUERY 1 "2006-01-11" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
\&\fBgpt-query\fR \- Queries an installation for packages
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
gpt-query [\-name=Name \-flavor=Flavor \-pkgtype=Type \-\-help \-file=name \-man \-deps=run|sdk] [pkgname\-flavor\-pkgtype+]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBgpt-query\fR searches installed packages for matches to the query.
\&\fIName\fR is the name of the package. \fIFlavor\fR is the
information about linking and compile options used on package.  
\&\fIType\fR is the type of the package. \fI?\fR will alow the use to
access system help.
.PP
The user may enter a value for any of the options.  These options
can be used in combination or not at all.  The script will take the
options being used and try to find all matching items.
.PP
An alternate form is to use the pkgname-flavor-pkgtype tuples.
Multiple of instances of these tuples can be used in a query.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-name=NAME\fR" 4
.IX Item "-name=NAME"
.Vb 1
\& Returns all of the packages matching NAME.
.Ve
.IP "\fB\-flavor=FLAVOR\fR" 4
.IX Item "-flavor=FLAVOR"
Returns all of the packages matching \s-1FLAVOR\s0.
.IP "\fB\-pkgtype=TYPE\fR" 4
.IX Item "-pkgtype=TYPE"
Returns all of the packages matching \s-1TYPE\s0.
.IP "\fB\-file=FILE\fR" 4
.IX Item "-file=FILE"
Returns the package owning the \s-1FILE\s0.  \s-1FILE\s0 needs to be either an
absolute path or referenced to \f(CW$GLOBUS_LOCATION\fR.
.IP "\fB\-deps=run|sdk\fR" 4
.IX Item "-deps=run|sdk"
Returns the runtime or build dependencies of a package.
.IP "\fB\-help\fR" 4
.IX Item "-help"
Print a brief help message and exits.
.IP "\fB\-man\fR" 4
.IX Item "-man"
Prints the manual page and exits.
.IP "\fB\-version\fR" 4
.IX Item "-version"
Prints the version of \s-1GPT\s0 and exits.
.IP "\fB\-what\-bundles\fR" 4
.IX Item "-what-bundles"
Prints a list of the installed bundles.
.IP "\fB\-verify\-bundle=BUNDLE\fR" 4
.IX Item "-verify-bundle=BUNDLE"
Takes a bundle defintion and checks to see if it matches the installation.
.IP "\fB\-bundle\-packages=BUNDLE\fR" 4
.IX Item "-bundle-packages=BUNDLE"
List the packages that belong to the desired bundle.
.IP "\fB\-bundle \s-1BUNDLE\s0 1 [\s-1BUNDLE\s0 2]\fR" 4
.IX Item "-bundle BUNDLE 1 [BUNDLE 2]"
If two bundles are given, the bundles will be compared to one another
for equality.  If only one bundle is given, the bundle will be checked
against the installation.  This command works on tar bundles.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 1
\&  gpt\-query
.Ve
.PP
Returns a listing of all of the installed packages.
.PP
.Vb 1
\&  gpt\-query \-name=foo
.Ve
.PP
Returns all flavors and package types with the name \*(L"foo\*(R".
.PP
.Vb 1
\& gpt\-query foo
.Ve
.PP
Also returns all flavors and package types with the name \*(L"foo\*(R".
.PP
.Vb 1
\&  gpt\-query \*(Aqfoo\-*\-*\*(Aq
.Ve
.PP
A third way of typing the same query.  Note the single quotes.
.PP
.Vb 1
\&  gpt\-query \*(Aq*\-noflavor\-*\*(Aq
.Ve
.PP
List all of the packages with a 'noflavor' build flavor.
.PP
.Vb 1
\&  gpt\-query \-file=libexec/globus\-build\-env\-gcc32.sh
.Ve
.PP
Returns \*(L"/libexec/globus\-build\-env\-gcc32.sh is owned by globus_core\-gcc32\-rtl\*(R"
.PP
.Vb 1
\&  gpt\-query \-file=$GLOBUS_LOCATION/libexec/globus\-build\-env\-gcc32.sh
.Ve
.PP
Returns the same.
.PP
.Vb 1
\&  gpt\-query \-file=globus\-build\-env\-gcc32.sh
.Ve
.PP
Returns an error because the path is incorrect.
.SH "OUTPUT"
.IX Header "OUTPUT"
Here is an example output:
.PP
.Vb 1
\&   gpt\-query \*(Aq*\-noflavor\-*\*(Aq
\&
\& 4 packages were found in /home/mbletzin/work/install that matched your query:
\&
\& packages found that matched your query 
\&        globus_core\-noflavor\-data ver: 2.1 cmp id: 2.1.0
\&        globus_core_setup\-noflavor\-pgm ver: 2.0 cmp id: 2.0.0
\&        globus_ssl_utils\-noflavor\-data ver: 2.1 cmp id: 2.1.0
\&        kca_setup\-noflavor\-pgm ver: 3.0.2p1 cmp id: 1.0.0
.Ve
.PP
For each package name, flavor, package type, version, and the
compatibility identifier is return.  The compatibility identifier is
what is used to resolve dependencies.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIgpt\-install\fR\|(1) \fIgpt\-uninstall\fR\|(1) \fIgpt\-verify\fR\|(1) \fIgpt\-postinstall\fR\|(1)
.SH "AUTHOR"
.IX Header "AUTHOR"
Michael Bletzinger <mbletzin.ncsa.uiuc.edu> and Eric Blau
<eblau.ncsa.uiuc.edu>
