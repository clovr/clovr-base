.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.09)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GPT-SETUP 1"
.TH GPT-SETUP 1 "2006-01-11" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
\&\fBgpt_setup\fR \- Create automake and autoconf files to convert
software into a package
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
gpt_setup name version [directory_containing_source_code] [build_directory]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBgpt_setup\fR creates Makefile.am files and a configure.in file as well
as other stuff that is used to convert a software distribution into a
globus package.  \fIname\fR is the name of the package. \fIversion\fR is the
version of the package.  \fIdirectory_containing_source_code\fR is the
top source directory for the distribution (the default is the current
directory).  \fIbuild_directory\fR is the top level directory containing
the resulting binaries (default is the source directory).  The
resulting build depends on other files from the globus packaging tools
(\s-1GPT\s0) as well as the globus_core package.  \fB\s-1NOTE\s0\fR that the files that
gpt_setup creates need to be edited by hand in order for the packaging
to be complete. The idea behind gpt_setup is simple; \*(L"It is easier to
edit than to create.\*(R".
.SH "Description of the Files that \fBgpt_setup\fP Creates"
.IX Header "Description of the Files that gpt_setup Creates"
.IP "\fBMakefile.am\fR.  \fBgpt_setup\fR creates a Makefile.am in the top level directory and every subdirectory except for those called \s-1CVS\s0 or \s-1RCS\s0.  The Makefile.am files contain a list of sources, subdirectories, libraries, programs, and scripts.  All libraries will be built as libtool libraries.  \fB\s-1NOTE\s0\fR that all of the sources found will be included in all of the targets found.  All libraries and executables have flags from the autoconf variables \s-1GPT_INCLUDES\s0, \s-1GPT_CFLAGS\s0, \s-1GPT_LDFLAGS\s0, and \s-1GPT_LIBS\s0 added to them.  All of the Makefiles contain directives to include files from globus_core that contain standard make targets and rules." 4
.IX Item "Makefile.am.  gpt_setup creates a Makefile.am in the top level directory and every subdirectory except for those called CVS or RCS.  The Makefile.am files contain a list of sources, subdirectories, libraries, programs, and scripts.  All libraries will be built as libtool libraries.  NOTE that all of the sources found will be included in all of the targets found.  All libraries and executables have flags from the autoconf variables GPT_INCLUDES, GPT_CFLAGS, GPT_LDFLAGS, and GPT_LIBS added to them.  All of the Makefiles contain directives to include files from globus_core that contain standard make targets and rules."
.PD 0
.IP "\fBconfigure.in\fR \fBgpt_setup\fR creates a top level configure.in containing the standard GLOBUS_* macros from globus_core. The script detects the occurance of *.in files and headers and adds them to \s-1AM_CONFIG_HEADER\s0 and \s-1AC_OUTPUT\s0." 4
.IX Item "configure.in gpt_setup creates a top level configure.in containing the standard GLOBUS_* macros from globus_core. The script detects the occurance of *.in files and headers and adds them to AM_CONFIG_HEADER and AC_OUTPUT."
.IP "\fBbootstrap\fR \fBgpt_setup\fR creates a top level bootstrap script which is used to invoke aclocal, automake, autoheader, and autoconf in the correct order." 4
.IX Item "bootstrap gpt_setup creates a top level bootstrap script which is used to invoke aclocal, automake, autoheader, and autoconf in the correct order."
.IP "\fBpkgdata\fR \fBgpt_setup\fR creates a pkgdata directory that contains the following:" 4
.IX Item "pkgdata gpt_setup creates a pkgdata directory that contains the following:"
.RS 4
.IP "\fBpkg_data_src.gpt.in\fR is a file that contains the packaging metadata for the newly created package.  \fBgpt_setup\fR inserts the name and version of the package as well as a list of all of the libraries that the package provides." 4
.IX Item "pkg_data_src.gpt.in is a file that contains the packaging metadata for the newly created package.  gpt_setup inserts the name and version of the package as well as a list of all of the libraries that the package provides."
.IP "\fBMyFilelists.pm\fR is a perl module that is used by \fBgpt_sort_file_list\fR to sort the installed files from the source package into binary packages.  The module can be modified to take care of special files." 4
.IX Item "MyFilelists.pm is a perl module that is used by gpt_sort_file_list to sort the installed files from the source package into binary packages.  The module can be modified to take care of special files."
.IP "\fBMakefile.am\fR is a makefile that assembles the filelists and packaging data into the various files." 4
.IX Item "Makefile.am is a makefile that assembles the filelists and packaging data into the various files."
.RE
.RS 4
.RE
.PD
.SH "Post gpt_setup Tasks (What is Left to the Developer)"
.IX Header "Post gpt_setup Tasks (What is Left to the Developer)"
\&\fBgpt_setup\fR does not do everything that is needed to compile a
package.  Some tasks need a developer's touch.  Here is a checklist of
tasks that may need to be done by hand:
.IP "Dependencies need to be added to pkgdata/pkg_data_src.gpt.in" 4
.IX Item "Dependencies need to be added to pkgdata/pkg_data_src.gpt.in"
You can use the \s-1GUI\s0 tool \fBgpt_edit\fR or edit the file by hand.  The
format is explained in \fBPackage\fR, \fBSourceDependency\fR, and
\&\fBVersion\fR.
.IP "Build Environment flags need to be added to configure.in" 4
.IX Item "Build Environment flags need to be added to configure.in"
Use the autoconf macros \s-1GPT_SET_CFLAGS\s0, \s-1GPT_SET_INCLUDES\s0, \s-1GPT_SET_LIBS\s0
pass build environment flags to both the Makefiles and the packaging
metadata. With the exception of \s-1GPT_SET_CFLAGS\s0, these flags will be
included in the packaging metadata and used when packages using this
package are built.  See \fBPackage\fR for details on the build
environment metadata.
.IP "Source needs to be assigned to programs and libraries in the Makefile.am's." 4
.IX Item "Source needs to be assigned to programs and libraries in the Makefile.am's."
\&\fBgpt_edit\fR automatically assigns all source found in a directory to
all of the targets found in a directory.  For example:
.Sp
.Vb 5
\&  Sources = \e
\&         foo.c \e
\&         foo.h \e
\&         fee.c \e
\&         fee.h
\&
\&  bin_programs = foo fee
\&
\&  foo_SOURCES = $(Sources)
\&  fee_SOURCES = $(Sources)
.Ve
.Sp
As you can see both programs fee and foo wind up being built with the
same set of sources.  This is of course wrong and needs to be
corrected for every directory where more than one program or
library is built.
.IP "Autoconf defines need to be tested for" 4
.IX Item "Autoconf defines need to be tested for"
Use \fBgpt_undefines\fR to identify all of the preprocesser macros that
are used in the source code which are not defined internally.  This
list will highlight the autoconf tests that need to be added to the
configure.in script.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIgpt_edit\fR\|(1) \fIgpt_undefines\fR\|(1) \fIautomake\fR\|(1) \fIautoconf\fR\|(1) \fIPackage\fR\|(3) \fIVersion\fR\|(3) \fISourceDependency\fR\|(3)
.SH "AUTHOR"
.IX Header "AUTHOR"
Michael Bletzinger <mbletzin.ncsa.uiuc.edu> and Eric Blau
<eblau.ncsa.uiuc.edu>
