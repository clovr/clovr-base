## automake - create Makefile.in from Makefile.am
## Copyright (C) 1994, 1995, 1996, 1997, 1998 Free Software Foundation, Inc.

## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2, or (at your option)
## any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
## 02111-1307, USA.
link-@DIR@LTLIBRARIES: $(@DIR@_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@$(mkinstalldirs) $(DESTDIR)$(@DIR@dir)
## Funny invocation because Makefile variable can be empty, leading to
## a syntax error in sh.
	@list='$(@DIR@_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	  	mydir=`pwd`; \
	    	target_p=$(DESTDIR)$(@DIR@dir)/$$p; \
		target_dir="$(DESTDIR)$(@DIR@dir)/"; \
		root_p=`echo $$p | sed "s,.la,,"`; \
		liblist=`ls $$mydir/.libs/$$root_p.so*`; for so in $$liblist; do \
			if test ! -h $$so; then \
				so_name=`echo $$so | sed "s,$$mydir/.libs/,,"`; \
				so_list="$$so_list $$so_name"; \
			fi; \
		done; \
		if test -f $$target_p -a ! -h $$target_p; then \
			echo "mv $$target_p $$target_p.$(LINK_BAK)"; \
			mv $$target_p $$target_p.$(LINK_BAK); \
			for so in $$so_list; do \
				echo "mv $$target_dir/$$so $$target_dir/$$so.$(LINK_BAK)"; \
				mv $$target_dir/$$so $$target_dir/$$so.$(LINK_BAK); \
			done; \
		fi; \
		if test ! -h $$target_p; then \
			echo "ln -s $$mydir/$$p $$target_p"; \
			ln -s $$mydir/$$p $$target_p; \
			for so in $$so_list; do \
				echo "ln -s $$mydir/.libs/$$so $$target_dir/$$so"; \
				ln -s $$mydir/.libs/$$so $$target_dir/$$so; \
			done; \
		fi; \
	  else :; fi; \
	done

unlink-@DIR@LTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(@DIR@_LTLIBRARIES)'; for p in $$list; do \
	    	target_p=$(DESTDIR)$(@DIR@dir)/$$p; \
		target_dir="$(DESTDIR)$(@DIR@dir)/"; \
		root_p=`echo $$p | sed "s,.la,,"`; \
		so_list=`ls $$target_dir/$$root_p.so*.$(LINK_BAK)`; \
		if test -h $$target_p; then \
			echo "rm $$target_p"; \
			rm $$target_p; \
			for so in $$so_list; do \
				so_name=`echo $$so | sed "s,.$(LINK_BAK),,"`; \
				echo "rm $$so_name"; \
				rm $$so_name; \
			done; \
		fi; \
		if test -f $$target_p.$(LINK_BAK); then \
			echo "mv $$target_p.$(LINK_BAK) $$target_p"; \
			mv $$target_p.$(LINK_BAK) $$target_p; \
			for so in $$so_list; do \
				so_name=`echo $$so | sed "s,.$(LINK_BAK),,"`; \
				mv $$so_name.$(LINK_BAK) $$so_name; \
			done; \
		fi; \
	done

filelist-@DIR@LTLIBRARIES: $(@DIR@_LTLIBRARIES)
## Funny invocation because Makefile variable can be empty, leading to
## a syntax error in sh.
	@list='$(@DIR@_LTLIBRARIES)'; for p in $$list; do \
	  $(GPT_LOCATION)/sbin/gpt_get_lib_names $$p $(DESTDIR)$(@DIR@dir) >> $(FILELIST_FILE); \
	done

