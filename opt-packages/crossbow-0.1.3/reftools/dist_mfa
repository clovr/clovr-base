#!/usr/bin/perl -w

#
# dist_mfa
#
#  Authors: Ben Langmead & Michael C. Schatz
#     Date: 10/12/2009
#
# Given a multi-FASTA file and a map from sequence names to numeric
# Crossbow ids, create a set of chrX.fa files containing the individual
# sequences with their Crossbow names.
#
# Usage: dist_mfa <multi-fasta> <cmap>

use strict;
use warnings;

die "Must specify multi-FASTA file as first argument\n" unless defined($ARGV[0]);
die "Must specify cmap file as second argument\n" unless defined($ARGV[1]);
print STDERR "Multi-fasta file: $ARGV[0]\n";
print STDERR "Chromosome map file: $ARGV[1]\n";
my $cmapstr = $ARGV[1];
my %cmap = ();
if($cmapstr ne "") {
	open CMAP, "$cmapstr";
	while(<CMAP>) {
		chomp;
		my @s = split;
		next if $s[0] eq "" || $#s < 1;
		$cmap{$s[0]} = $s[1];
	}
	close(CMAP);
}

my $mfa;
if($ARGV[0] =~ /\.gz$/) {
	open $mfa, "gzip -dc $ARGV[0] |" || die;
} else {
	open $mfa, "$ARGV[0]" || die;
}
my $curRef = "";
my $fh;
open $fh, ">/dev/null" || die;
while(<$mfa>) {
	chomp;
	if(/^>/) {
		$curRef = substr($_, 1);
		if(defined($cmap{$curRef})) {
			close($fh);
			$curRef = $cmap{$curRef};
			open $fh, ">chr$curRef.fa" || die;
		} else {
			open $fh, ">/dev/null" || die;
		}
		print $fh ">$curRef\n";
	} else {
		print $fh "$_\n";
	}
}
close($mfa);
