## Configuration file for
#########################################################
## Input information.
## Configuration options for the pipeline.
#########################################################
[input]
## The input sff file tag name. Should already be tagged
## This can be multiple sff files that will be assembled
## together.
## tagData.py --help for more details
INPUT_PAIRED_FASTQ_TAG={"display": "Input Tag", "desc": "The input tag for this pipeline. Expected: Illumina reads in FASTQ format", "type": "dataset", "type_params": { "format_type": ["fastq"], "transform_name": "input.INPUT_FILE_LIST" }, "require_value": true }

## For the annotation portion of the pipeline.
REFERENCE_DB_TAG={"display": "Reference database", "default": "clovr-dx-db", "desc": "Reference database to use", "type": "dataset", "type_params": { "transform_name": "input.DATABASE_PATH", "transform_type": "tag_base_dir" }, "visibility": "always_hidden", "require_value": true }

[params]
MIN_SEED_LENGTH={"display": "Minimum Seed Length", "default": 19, "desc": "Minimum seed length. Matches shorter than INT will be missed.", "type": "integer", "required_value": true}

MISMATCH_PENALTY={"display": "Mismatch Penalty", "default": 4, "desc": "Mismatch penalty.", "type": "integer", "required_value": true}

GAP_OPEN_PENALTY={"display": "Gap Open Penalty", "default": 6, "desc": "Gap open penalty.", "type": "integer", "required_value": true}

GAP_EXTENSION_PENALTY={"display": "Gap Extension Penalty", "default": 1, "type": "integer", "required_value": true}

#########################################################
## Output info.
## Specifies where locally the data will end up and also
## logging information
#########################################################
[output]
-include_in_section /opt/clovr_pipelines/common_config/output.config
## Output: tags to download after run finishes
## Comma separated list of tags
## Possible options: assembly_scf, assembly_qc
TAGS_TO_DOWNLOAD={"display": "Tags to download", "default": "assembly_sam", "desc": "You shouldn't need to modify this", "type": "restricted_string list", "type_params": { "choices": ["assembly_sam"] }, "visibility": "default_hidden" }

[pipeline]
-include_in_section /opt/clovr_pipelines/common_config/pipeline.config

SOP_VERSION={"default": "clovr_assembly_bwa_illumina_version_0.0", "type": "string", "visibility": "always_hidden"}
PIPELINE_TEMPLATE={"default": "clovr_assembly_bwa_illumina", "visibility": "hidden", "desc": "The type of the pipeline we are running", "type": "string"}
#prestart,prerun,postrun are all run locally. Use noop.xml for no operation
#Prestart is run before cluster start
#Possible actions: tag input data and do QC metrics
PRESTART_TEMPLATE_XML={"default": "/opt/ergatis/docs/noop.xml", "visibility": "always_hidden", "type": "string" }
#Prerun is run after cluster start but before pipeline start
#Possible actions: tag and upload data sets to the cluster
PRERUN_TEMPLATE_XML={"default": "/opt/clovr_pipelines/workflow/project_saved_templates/clovr_assembly_bwa_illumina/clovr_assembly_bwa_illumina.prerun.xml", "visibility": "always_hidden", "type": "string" }
#Postrun is run after pipeline completion and after downlaod data
#Possible actions: local a local database, web browser.reorganize data for local ergatis
POSTRUN_TEMPLATE_XML={"default": "/opt/clovr_pipelines/workflow/project_saved_templates/clovr_assembly_bwa_illumina/clovr_assembly_bwa_illumina.postrun.xml", "visibility": "always_hidden", "type": "string" }

DOWNLOAD_TAG_ITERATOR_XML={"default": "/opt/ergatis/docs/clovrdownload_tag.iterator.xml", "visibility": "always_hidden", "type": "string"}

