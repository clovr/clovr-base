#!/usr/bin/perl
# Name: NcbiJsonsender.cgi
# Desc: Gets the Ncbi taxonomy data structure generated by ParseNcbiOboTaxaAndWriteToDiskFile.pl
#		Sends the children of given node back to client
# 		Sends data in the form of JSON
# Dependencies: CGI, JSON::PP, Storable
# @author: Mahesh Vangala
###################         LIBRARIES & PRAGMAS         #################

use strict;
use warnings;
use CGI;
use CGI::Carp qw(fatalsToBrowser);
use JSON::PP;
use Storable;

###################             CONSTATNS               #################

my $ROOT = '/';
my $NODE = 'node';
my $ID	= 'id';
my $CHILDREN = 'children';
my $TEXT = 'text';
my $LEAF = 'leaf';
my $LEAF_COUNT = 'leaf_count';
my $TRUE = 1;
my $FALSE = 0;

###################             GLOBAL VARIABLES        #################

my $q = new CGI;
my $binaryFile = '../binary_files/FilteredNcbiTaxaAnnotationDataStructure';
my ($root) = retrieve($binaryFile) or die "Error in retrieving $binaryFile\n";

###################            SUBS DECLARATION         #################

sub getAllRootNodes ();
sub getAllChildNodes ($);

###################            MAIN PROGRAM             #################

#sends jason
my $params = $q->Vars;
print "Content-type: text/html\n\n";
my $json = ($$params{$NODE} eq '/') ? encode_json(getAllRootNodes())
								   	: encode_json(getAllChildNodes($$params{$NODE}));
print $json;
exit(0);

##################             END OF MAIN               #################

sub getAllRootNodes () {
	my $refArray = [];
	while(my ($key,$value) = each %{$$root{$ROOT}{$CHILDREN}}) {
		my $refHash = {};
		$$refHash{$ID} = $key;
		if($$root{$key}{$LEAF}) {
			$$refHash{$LEAF} = JSON::PP::true;
			$$refHash{$TEXT} = $$root{$key}{$TEXT};	
		}
		else {
			$$refHash{$TEXT} = $$root{$key}{$TEXT}." (".$$root{$key}{$LEAF_COUNT}.")";			
		}
		push @$refArray, $refHash;
	}
	return $refArray;
}

sub getAllChildNodes ($) {
	my ($id) = @_;
	my $refArray = [];
	while(my ($key,$value) = each %{$root->{$id}->{$CHILDREN}}) {
		my $refHash = {};
		$$refHash{$ID} = $key;		
		if($$root{$key}{$LEAF}) {
			$$refHash{$LEAF} = JSON::PP::true;
		}
		$$refHash{$TEXT} = $$root{$key}{$TEXT}." (".$$root{$key}{$LEAF_COUNT}.")";
		push @$refArray, $refHash;
	}
	return $refArray;
}
